---
- name: Update APT package cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install essential packages
  ansible.builtin.apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  loop:
    - wget
    - gnupg2
    - lsb-release
    - curl

- name: Download the Percona repository package
  ansible.builtin.get_url:
    url: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
    dest: /tmp/percona-release_latest.generic_all.deb

- name: Install Percona release package
  ansible.builtin.apt:
    deb: /tmp/percona-release_latest.generic_all.deb
    state: present

- name: Update APT package cache (again)
  ansible.builtin.apt:
    update_cache: yes

- name: Setup Percona XtraDB Cluster 8.0
  become: yes
  command: percona-release setup pxc80

- name: Install Percona XtraDB Cluster
  ansible.builtin.apt:
    name: percona-xtradb-cluster
    state: present
    update_cache: yes

- name: Recursively change ownership of a directory
  ansible.builtin.file:
    path: /etc/ssl/percona-cluster
    state: directory
    recurse: yes
    owner: mysql
    group: mysql

- name: Copy SSL files with correct owner and permissions
  ansible.builtin.copy:
    src: /etc/ssl/percona-cluster/
    dest: /etc/ssl/
    owner: mysql
    group: mysql

- name: Display hostname
  ansible.builtin.debug:
    msg: "Hostname is {{ansible_hostname}}"

- name: Display IP address
  ansible.builtin.debug:
    msg: "ansible_default_ipv4 is {{ansible_default_ipv4.address}}"

- name: Display server_id
  ansible.builtin.debug:
    msg: "server_id is {{server_id}}"

- name: Template
  ansible.builtin.template:
    src: ./roles/db-role/templates/mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
  vars:
    wsrep_node_address: "{{ansible_default_ipv4.address}}"
    server_id: "{{server_id}}"
    wsrep_node_name: "{{ansible_hostname}}"
    mysql_ssl_ca: "/etc/ssl/percona-cluster/ca.pem"
    mysql_ssl_cert: "/etc/ssl/percona-cluster/client-cert.pem"
    mysql_ssl_key: "/etc/ssl/percona-cluster/client-key.pem"
    pxc_encrypt_cluster_traffic: "ON"

- name: Gather cluster IPs
  ansible.builtin.set_fact:
    mysql_bind_address: "{{ansible_default_ipv4.address}}"
    pxc_nodes_ips: "{{groups['db-servers'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list }}"
    wsrep_cluster_address: "gcomm://{{ mysql_bind_address }},{{ pxc_nodes_ips | join(',') }}"
